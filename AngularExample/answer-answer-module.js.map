{"version":3,"sources":["./src/app/answer/answer.component.ts","./src/app/answer/answer.component.html","./src/app/answer/answer-textarea/answer-textarea.component.ts","./src/app/answer/answer-textarea/answer-textarea.component.html","./src/app/service/notification.service.ts","./src/app/model/question-type-eunm.ts","./src/app/answer/answer-checkbox/answer-checkbox.component.ts","./src/app/answer/answer-checkbox/answer-checkbox.component.html","./src/app/answer/answer-radio/answer-radio.component.ts","./src/app/answer/answer-radio/answer-radio.component.html","./src/app/answer/abstract-answer.ts","./src/app/answer/answer-routing.module.ts","./src/app/answer/answer-select/answer-select.component.ts","./src/app/answer/answer-select/answer-select.component.html","./src/app/answer/answer.module.ts","./src/app/answer/answer-input/answer-input.component.ts","./src/app/answer/answer-input/answer-input.component.html","./src/app/service/questionnaire.service.ts"],"names":[],"mappings":"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","file":"answer-answer-module.js","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {QuestionnaireService} from \"../service/questionnaire.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {BehaviorSubject, combineLatest, Observable, Subscription} from \"rxjs\";\r\nimport {catchError, map, switchMap} from \"rxjs/operators\";\r\nimport {QuestionnaireResponse} from \"../model/questionnaire-response\";\r\nimport {QuestionTypeEunm} from \"../model/question-type-eunm\";\r\nimport {QuestionAnswerRequest} from \"../model/question-answer-request\";\r\nimport {AnswerRequest} from \"../model/answer-request\";\r\nimport {QuestionResponse} from \"../model/question-response\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {NotificationService} from \"../service/notification.service\";\r\n\r\n@Component({\r\n  selector: 'app-answer',\r\n  templateUrl: './answer.component.html',\r\n  styleUrls: ['./answer.component.scss']\r\n})\r\nexport class AnswerComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(private questionnaireService: QuestionnaireService, private activatedRoute: ActivatedRoute,\r\n              private notificationService: NotificationService, private router: Router\r\n  ) {\r\n  }\r\n\r\n  form = new FormGroup({});\r\n  type = QuestionTypeEunm;\r\n  state = \"loading\";\r\n  disableSaveButton$ = new BehaviorSubject(true);\r\n  subscriptions$ = [];\r\n  poll: QuestionnaireResponse = {\r\n    id: null,\r\n    questions: [],\r\n    fastLink: null,\r\n    name: null\r\n\r\n  };\r\n  pollAnswer: AnswerRequest;\r\n\r\n  ngOnInit(): void {\r\n    this.subscriptions$.push(this.initSubscription());\r\n  }\r\n\r\n  initSubscription(): Subscription {\r\n    return this.activatedRoute.params.pipe(\r\n      map(param => param.fastLink),\r\n      switchMap(fastLink => this.getPoll(fastLink))\r\n    ).subscribe();\r\n  }\r\n\r\n  getPoll(fastLink): Observable<QuestionnaireResponse> {\r\n    return this.questionnaireService.getPoll(fastLink).pipe(map(result => {\r\n      this.state = \"ok\"\r\n      this.poll = result;\r\n      this.initAnswer(result);\r\n\r\n      return result;\r\n    }), catchError(() => {\r\n      this.state = \"error\";\r\n      throw new Error('Data loading error');\r\n    }));\r\n  }\r\n\r\n  private initAnswer(result: QuestionnaireResponse): void {\r\n    this.pollAnswer = {questionnaireId: result.id, questions: []};\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions$.forEach(row => row.unsubscribe());\r\n  }\r\n\r\n  onSelectAnswer(questionAnswerRequest: QuestionAnswerRequest): void {\r\n    this.disableSaveButton$.next(!this.form.valid);\r\n    const index = this.pollAnswer.questions.findIndex(currentAnswers => currentAnswers.questionId === questionAnswerRequest.questionId);\r\n    if (index > -1) {\r\n      if (this.checkIfAnswersAreFilledUp(questionAnswerRequest)) {\r\n        this.pollAnswer.questions.splice(index, 1);\r\n      } else {\r\n        this.pollAnswer.questions[index] = questionAnswerRequest;\r\n      }\r\n    } else {\r\n      this.pollAnswer.questions.push(questionAnswerRequest);\r\n\r\n    }\r\n    console.log(this.pollAnswer);\r\n  }\r\n\r\n\r\n  private checkIfAnswersAreFilledUp(questionAnswerRequest: QuestionAnswerRequest): boolean {\r\n    return (!questionAnswerRequest.answerIds || questionAnswerRequest.answerIds.length === 0) && !questionAnswerRequest.answer;\r\n  }\r\n\r\n  save(): void {\r\n    this.disableSaveButton$.next(true);\r\n    if (this.form.valid) {\r\n      this.questionnaireService.save(this.pollAnswer).subscribe(() => {\r\n        this.notificationService.showSuccess(\"Poll has been succesfully send\", \"Success\");\r\n        this.router.navigateByUrl(\"/\");\r\n      }, () => {\r\n        this.notificationService.showError(\"Something went wrong\", \"Error\");\r\n        this.disableSaveButton$.next(false);\r\n\r\n      });\r\n    } else {\r\n      this.disableSaveButton$.next(false);\r\n\r\n    }\r\n  }\r\n}\r\n","<div class=\"toolbar\" role=\"banner\">\r\n  <div class=\"title\"><span><h4>{{poll.name}}</h4></span></div>\r\n  <div class=\"spacer\"></div>\r\n  <a aria-label=\"Link to our github\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Seme15/polls-Frontend\"\r\n     title=\"Github\">\r\n    <svg id=\"twitter-logo\" height=\"28\" data-name=\"Logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -100 600 600\">\r\n      <rect width=\"400\" height=\"400\" fill=\"none\"/>\r\n      <path\r\n        d=\"M409.132,114.573c-19.608-33.596-46.205-60.194-79.798-79.8C295.736,15.166,259.057,5.365,219.271,5.365 c-39.781,0-76.472,9.804-110.063,29.408c-33.596,19.605-60.192,46.204-79.8,79.8C9.803,148.168,0,184.854,0,224.63 c0,47.78,13.94,90.745,41.827,128.906c27.884,38.164,63.906,64.572,108.063,79.227c5.14,0.954,8.945,0.283,11.419-1.996 c2.475-2.282,3.711-5.14,3.711-8.562c0-0.571-0.049-5.708-0.144-15.417c-0.098-9.709-0.144-18.179-0.144-25.406l-6.567,1.136 c-4.187,0.767-9.469,1.092-15.846,1c-6.374-0.089-12.991-0.757-19.842-1.999c-6.854-1.231-13.229-4.086-19.13-8.559 c-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559 c-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-0.951-2.568-2.098-3.711-3.429c-1.142-1.331-1.997-2.663-2.568-3.997 c-0.572-1.335-0.098-2.43,1.427-3.289c1.525-0.859,4.281-1.276,8.28-1.276l5.708,0.853c3.807,0.763,8.516,3.042,14.133,6.851 c5.614,3.806,10.229,8.754,13.846,14.842c4.38,7.806,9.657,13.754,15.846,17.847c6.184,4.093,12.419,6.136,18.699,6.136 c6.28,0,11.704-0.476,16.274-1.423c4.565-0.952,8.848-2.383,12.847-4.285c1.713-12.758,6.377-22.559,13.988-29.41 c-10.848-1.14-20.601-2.857-29.264-5.14c-8.658-2.286-17.605-5.996-26.835-11.14c-9.235-5.137-16.896-11.516-22.985-19.126 c-6.09-7.614-11.088-17.61-14.987-29.979c-3.901-12.374-5.852-26.648-5.852-42.826c0-23.035,7.52-42.637,22.557-58.817 c-7.044-17.318-6.379-36.732,1.997-58.24c5.52-1.715,13.706-0.428,24.554,3.853c10.85,4.283,18.794,7.952,23.84,10.994 c5.046,3.041,9.089,5.618,12.135,7.708c17.705-4.947,35.976-7.421,54.818-7.421s37.117,2.474,54.823,7.421l10.849-6.849 c7.419-4.57,16.18-8.758,26.262-12.565c10.088-3.805,17.802-4.853,23.134-3.138c8.562,21.509,9.325,40.922,2.279,58.24 c15.036,16.18,22.559,35.787,22.559,58.817c0,16.178-1.958,30.497-5.853,42.966c-3.9,12.471-8.941,22.457-15.125,29.979 c-6.191,7.521-13.901,13.85-23.131,18.986c-9.232,5.14-18.182,8.85-26.84,11.136c-8.662,2.286-18.415,4.004-29.263,5.146 c9.894,8.562,14.842,22.077,14.842,40.539v60.237c0,3.422,1.19,6.279,3.572,8.562c2.379,2.279,6.136,2.95,11.276,1.995 c44.163-14.653,80.185-41.062,108.068-79.226c27.88-38.161,41.825-81.126,41.825-128.906 C438.536,184.851,428.728,148.168,409.132,114.573z\"\r\n        fill=\"#fff\"/>\r\n    </svg>\r\n  </a>\r\n</div>\r\n<div class=\"content\" role=\"main\">\r\n\r\n  <div class=\"d-flex\" style=\"margin: 5px\">\r\n    <div *ngIf=\"state==='ok'\">\r\n      <div class=\"form\" style=\"margin: 10px\" *ngFor=\"let question of poll.questions\">\r\n\r\n        <div class=\"header\">\r\n          <h2 class=\"example-h2 flex-center\">{{question.value}}</h2>\r\n        </div>\r\n\r\n        <div class=\"body\">\r\n          <div class=\"child\" [ngSwitch]=\"question.type\">\r\n            <app-answer-checkbox (selectAnswer)=\"onSelectAnswer($event)\" [form]=\"form\" [question]=\"question\"\r\n                                 *ngSwitchCase=\"type.CHECKBOX\"></app-answer-checkbox>\r\n            <app-answer-radio (selectAnswer)=\"onSelectAnswer($event)\" [form]=\"form\" [question]=\"question\"\r\n                              *ngSwitchCase=\" type.RADIO\"></app-answer-radio>\r\n            <app-answer-textarea (selectAnswer)=\"onSelectAnswer($event)\" [form]=\"form\" [question]=\"question\"\r\n                                 *ngSwitchCase=\" type.TEXTAREA\"></app-answer-textarea>\r\n            <app-answer-select (selectAnswer)=\"onSelectAnswer($event)\" [form]=\"form\" [question]=\"question\"\r\n                               *ngSwitchCase=\"type.SELECT\"></app-answer-select>\r\n            <app-answer-input (selectAnswer)=\"onSelectAnswer($event)\" [form]=\"form\" [question]=\"question\"\r\n                              *ngSwitchCase=\" type.INPUT\"></app-answer-input>\r\n          </div>\r\n        </div>\r\n        <div class=\"footer\" *ngIf=\"question.required\">\r\n          <div class=\"footer-row\">\r\n            Question is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button mat-raised-button color=\"primary\" class=\"send\" [disabled]=\"(disableSaveButton$ | async)\" (click)=\"save()\">\r\n        Send\r\n      </button>\r\n\r\n    </div>\r\n    <div *ngIf=\"state==='error'\" style=\"flex-flow: column\">\r\n      <h2 style=\"width: 100%\"> Something went wrong...</h2>\r\n      <h5>Refresh page or check if link is correct</h5>\r\n      <a mat-raised-button color=\"primary\" style=\"width: 100%; color: white\" [routerLink]=\"['']\"> Back to home page</a>\r\n    </div>\r\n\r\n    <div *ngIf=\"state==='loading'\" style=\"flex-flow: column\">\r\n      <h3 style=\"width: 100%\">Loading...</h3>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AbstractAnswer} from \"../abstract-answer\";\r\n\r\n@Component({\r\n  selector: 'app-answer-textarea',\r\n  templateUrl: './answer-textarea.component.html',\r\n  styleUrls: ['./answer-textarea.component.css']\r\n})\r\nexport class AnswerTextareaComponent extends AbstractAnswer implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.abstractInit();\r\n  }\r\n\r\n  onSelectAnswer($event): void {\r\n    this.selectAnswer.next({\r\n      questionId: this.question.id,\r\n      answer: $event\r\n    });\r\n  }\r\n\r\n}\r\n","<div [formGroup]=\"form\" class=\"form-block-type \">\r\n\r\n  <mat-form-field class=\"example-full-width\">\r\n    <textarea matInput placeholder=\"Wpisz odpowiedź\" [formControlName]=\"question.id.toString()\" rows=\"3\"></textarea>\r\n  </mat-form-field>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {ToastrService} from \"ngx-toastr\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n\r\n  constructor(private toastr: ToastrService) {\r\n  }\r\n\r\n  showSuccess(msgKey: string, titleKey: string, args?: {}): void {\r\n    setTimeout(() =>\r\n      this.toastr.success(\r\n        msgKey,\r\n        titleKey,\r\n        {closeButton: true, positionClass: \"toast-top-center\", progressBar: true}\r\n      ));\r\n  }\r\n  showError(msgKey: string, titleKey: string, args?: {}): void {\r\n    setTimeout(() =>\r\n      this.toastr.error(\r\n        msgKey,\r\n        titleKey,\r\n        {closeButton: true, positionClass: \"toast-top-center\", progressBar: true}\r\n      ));\r\n  }\r\n}\r\n","export enum QuestionTypeEunm {\r\n\r\n  RADIO = 'RADIO',\r\n\r\n  CHECKBOX = 'CHECKBOX',\r\n\r\n  TEXTAREA = 'TEXTAREA',\r\n\r\n  INPUT = 'INPUT',\r\n\r\n  SELECT = 'SELECT'\r\n}\r\n","import {Component, Input, OnInit, Output} from '@angular/core';\r\nimport {AbstractAnswer} from '../abstract-answer';\r\n\r\n\r\n@Component({\r\n  selector: 'app-answer-checkbox',\r\n  templateUrl: './answer-checkbox.component.html',\r\n  styleUrls: ['./answer-checkbox.component.scss']\r\n})\r\nexport class AnswerCheckboxComponent extends AbstractAnswer implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.abstractInit();\r\n  }\r\n\r\n  onSelectAnswer($event): void {\r\n    this.selectAnswer.next({\r\n      questionId: this.question.id,\r\n      answerIds: $event\r\n    });\r\n  }\r\n\r\n  updateForm(): void {\r\n    this.form.controls[this.question.id.toString()].setValue(this.getSelectedAnswerIds());\r\n  }\r\n\r\n  private getSelectedAnswerIds(): Array<number> {\r\n    return this.question.possibleAnswers\r\n      .filter(row => row.isChecked)\r\n      .map(row => {\r\n        return row.id;\r\n      });\r\n  }\r\n}\r\n","<div class=\"checkbox-content\">\r\n  <div style=\"width: 50%\" *ngFor=\"let answer of question.possibleAnswers\">\r\n    <mat-checkbox color=\"primary\"\r\n                  [(ngModel)]=\"answer.isChecked\"\r\n                  (ngModelChange)=\"updateForm()\">\r\n      <div style=\"white-space: pre-wrap\">{{answer.value }}</div>\r\n    </mat-checkbox>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AbstractAnswer} from \"../abstract-answer\";\r\n\r\n@Component({\r\n  selector: 'app-answer-radio',\r\n  templateUrl: './answer-radio.component.html',\r\n  styleUrls: ['./answer-radio.component.css']\r\n})\r\nexport class AnswerRadioComponent extends AbstractAnswer implements OnInit {\r\n\r\n  answerId: number;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.abstractInit();\r\n  }\r\n\r\n  onSelectAnswer($event): void {\r\n    this.selectAnswer.next({\r\n      questionId: this.question.id,\r\n      answerIds: [$event]\r\n    });\r\n  }\r\n\r\n}\r\n","<div [formGroup]=\"form\">\r\n  <mat-radio-group color=\"primary\"\r\n                   aria-labelledby=\"example-radio-group-label\"\r\n                   class=\"example-radio-group\"\r\n                   [formControlName]=\"question.id.toString()\">\r\n    <div class=\"checkbox-content\">\r\n      <mat-radio-button class=\"radio-button\" *ngFor=\"let answer of question.possibleAnswers\"\r\n                        [value]=\"answer.id\">\r\n        <div style=\"white-space: pre-wrap\">\r\n          {{answer.value}}\r\n        </div>\r\n      </mat-radio-button>\r\n    </div>\r\n  </mat-radio-group>\r\n</div>\r\n","import {Directive, Input, OnDestroy, OnInit, Output} from \"@angular/core\";\r\nimport {QuestionResponse} from \"../model/question-response\";\r\nimport {Subject} from \"rxjs\";\r\nimport {QuestionAnswerRequest} from \"../model/question-answer-request\";\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n@Directive()\r\n// @Directive only for letting angular know that class contains angula's elements\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class AbstractAnswer implements OnDestroy {\r\n\r\n  @Input()\r\n  question: QuestionResponse;\r\n\r\n  @Input()\r\n  form: FormGroup;\r\n\r\n  @Output()\r\n  selectAnswer = new Subject<QuestionAnswerRequest>();\r\n\r\n  subscriptions$ = [];\r\n\r\n\r\n  abstractInit(): void {\r\n    if (this.question.required) {\r\n      this.form.addControl(this.question.id.toString(), new FormControl(null, Validators.required));\r\n    } else {\r\n      this.form.addControl(this.question.id.toString(), new FormControl(null));\r\n    }\r\n\r\n    this.subscriptions$\r\n      .push(this.form.controls[this.question.id.toString()]\r\n        .valueChanges\r\n        .subscribe(row => this.onSelectAnswer(row)));\r\n  }\r\n\r\n  abstract onSelectAnswer($event): void;\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions$.forEach(row => row.unsubscribe());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AnswerComponent} from \"./answer.component\";\r\n\r\nconst routes: Routes = [{path: ':fastLink', component: AnswerComponent}];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AnswerRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AbstractAnswer} from \"../abstract-answer\";\r\n\r\n@Component({\r\n  selector: 'app-answer-select',\r\n  templateUrl: './answer-select.component.html',\r\n  styleUrls: ['./answer-select.component.css']\r\n})\r\nexport class AnswerSelectComponent extends AbstractAnswer implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.abstractInit();\r\n  }\r\n\r\n\r\n\r\n  onSelectAnswer($event): void {\r\n    this.selectAnswer.next({\r\n      questionId: this.question.id,\r\n      answerIds: [$event]\r\n    });\r\n\r\n\r\n  }\r\n}\r\n","<div [formGroup]=\"form\" class=\"form-block-type \">\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Wybierz odpowiedź...</mat-label>\r\n    <mat-select [formControlName]=\"question.id.toString()\">\r\n      <mat-option *ngFor=\"let answer of question.possibleAnswers\" [value]=\"question.id\">\r\n        {{answer.value}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {AnswerRoutingModule} from './answer-routing.module';\r\nimport {Routes} from '@angular/router';\r\nimport {AnswerComponent} from './answer.component';\r\nimport {AnswerCheckboxComponent} from './answer-checkbox/answer-checkbox.component';\r\nimport {AnswerRadioComponent} from './answer-radio/answer-radio.component';\r\nimport {AnswerSelectComponent} from './answer-select/answer-select.component';\r\nimport {AnswerTextareaComponent} from './answer-textarea/answer-textarea.component';\r\nimport {AnswerInputComponent} from './answer-input/answer-input.component';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\r\nimport {MatRadioModule} from \"@angular/material/radio\";\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [AnswerComponent,\r\n    AnswerCheckboxComponent,\r\n    AnswerRadioComponent,\r\n    AnswerSelectComponent,\r\n    AnswerTextareaComponent,\r\n    AnswerInputComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AnswerRoutingModule,\r\n    FormsModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class AnswerModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AbstractAnswer} from \"../abstract-answer\";\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-answer-input',\r\n  templateUrl: './answer-input.component.html',\r\n  styleUrls: ['./answer-input.component.css']\r\n})\r\nexport class AnswerInputComponent extends AbstractAnswer implements OnInit {\r\n\r\n  answer: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.abstractInit();\r\n\r\n  }\r\n\r\n  onSelectAnswer($event): void {\r\n    this.selectAnswer.next({\r\n      questionId: this.question.id,\r\n      answer: $event\r\n    });\r\n\r\n  }\r\n}\r\n","<div [formGroup]=\"form\" class=\"form-block-type \">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput [formControlName]=\"question.id.toString()\" placeholder=\"Wpisz odpowiedż...\">\r\n  </mat-form-field>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../environments/environment';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {QuestionnaireResponse} from \"../model/questionnaire-response\";\r\nimport {AnswerRequest} from \"../model/answer-request\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionnaireService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  readonly QUESTIONNAIRE_BASE_PATH = environment.baseUrl + environment.questionnaireUrl;\r\n\r\n  public getPoll(fastLink: string): Observable<QuestionnaireResponse> {\r\n    const url = `${this.QUESTIONNAIRE_BASE_PATH}/${fastLink}`;\r\n    return this.httpClient.get<QuestionnaireResponse>(url, {observe: 'body'});\r\n  }\r\n\r\n  public save(request: AnswerRequest): Observable<void> {\r\n    const url = `${this.QUESTIONNAIRE_BASE_PATH}/answer`;\r\n    return this.httpClient.post<void>(url, request, {observe: 'body'});\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}